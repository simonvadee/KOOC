#!/usr/bin/env python3

from sys import exit, argv
from cnorm.passes import to_c

if __name__ == '__main__':
    if len(argv) < 2:
        print('usage : kooc [kooc_file.kc]+')
        exit()

from pyrser import error
from os.path import isfile
from koocNorm import KoocNorm, transfo

def display(liste):
    for elem in liste:
        print(elem.to_yml(), '\n')
    print("\n-------------------------------\n")

for filename in argv[1:]:
    if not isfile(filename):
        print('error :', '\'' + filename + '\'', 'does not exists.')
        exit()
    path = filename.rpartition('/')
    grammar = KoocNorm(path[2], path[0] + path[1])
    try:
        res = grammar.parse_file(filename)
        if res:
            if transfo(res, grammar._implemTemplate[4].body.body[0]):
                for name, code in res.units.items():
                    output = open(name, 'w')
                    output.write(str(code.to_c()))
                output = open(path[2].replace('.k', '.'), 'w')
                output.write(str(res.to_c()))
    except error.Diagnostic as e:
        print(e)
